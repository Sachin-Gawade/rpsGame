{"version":3,"sources":["src/signs/rock.png","src/signs/paper.png","src/signs/scissors.png","src/PlayScreen.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","rock","require","paper","scissors","bgColors","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","header","fontSize","color","img","width","height","btn","position","bottom","PlayScreen","useState","counter","setCounter","useEffect","timer","setTimeout","clearTimeout","View","style","compose","Text","Image","source","Math","floor","random","Button","onPress","title","App","play","setPlay","button","StatusBar","fontWeight","marginBottom","marginTop","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,qJCIrCC,EAAOC,EAAQ,KACfC,EAAQD,EAAQ,KAChBE,EAASF,EAAQ,KAUjBG,EAAS,CAAC,UAAU,UAAU,WA2C9BC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAIjBC,OAAO,CACHC,SAAS,IACTC,MAAM,SAEVC,IAAI,CACFC,MAAM,IACNC,OAAO,KAETC,IAAI,CACFC,SAAS,WACTC,OAAO,MAIGC,EAhEE,WAAK,IAAD,EAGSC,mBAAS,GAHlB,WAGZC,EAHY,KAGHC,EAHG,KAqBjB,OAbFC,qBAAU,WACR,GAAa,IAAVF,EAAH,CAEC,IAAMG,EAAMC,YAAW,WACpBH,EAAWD,EAAQ,KAClB,KACH,OAAO,WACLK,aAAaF,OAEjB,CAACH,IAKG,kBAACM,EAAA,EAAD,CAAMC,MAAOzB,IAAW0B,QAAQ3B,EAAOG,UAAU,CAACE,gBAAgBN,EAASoB,EAAQ,MAChFA,EAAQ,EACN,kBAACS,EAAA,EAAD,CAAMF,MAAO1B,EAAOQ,QAASW,EAA7B,KAED,oCAEG,kBAACU,EAAA,EAAD,CAAOH,MAAO1B,EAAOW,IAAKmB,OArC3B,CAACnC,EAAKE,EAAMC,GACbiC,KAAKC,MAAoB,EAAdD,KAAKE,aAqCd,kBAACR,EAAA,EAAD,CAAMC,MAAO1B,EAAOc,KACpB,kBAACoB,EAAA,EAAD,CAASC,QAAS,kBAAIf,EAAW,IAAIgB,MAAM,mBCzC3C,SAASC,IAAO,IAAD,EACJnB,oBAAS,GADL,WACrBoB,EADqB,KACfC,EADe,KAG5B,OACGD,EAAQ,kBAAC,EAAD,MAET,kBAACb,EAAA,EAAD,CAAMC,MAAO1B,EAAOG,WAClB,kBAACyB,EAAA,EAAD,CAAMF,MAAO1B,EAAOQ,QAApB,wBACA,kBAACoB,EAAA,EAAD,CAAMF,MAAO,CAACjB,SAAS,KAAvB,8BACC,kBAACgB,EAAA,EAAD,CAAMC,MAAO1B,EAAOwC,QAClB,kBAACN,EAAA,EAAD,CAAQC,QAAS,kBAAII,GAAQ,IAAOH,MAAM,QAA1C,MAOH,kBAACK,EAAA,UAAD,CAAWf,MAAM,UAWvB,IAAM1B,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAIjBC,OAAO,CACHC,SAAS,GACTiC,WAAW,OACXC,aAAa,KAGjBH,OAAO,CACL5B,MAAM,IACNgC,UAAU,Q,4DClDX,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfC,QAAQH,KAAK,oCAAqCE,W","file":"static/js/app.36ef367e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rock.79436ec1.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.599c25df.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.f27b7752.png\";","import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport { StyleSheet, Text, View, Button, Image } from 'react-native';\r\n\r\nconst rock = require(\"./signs/rock.png\");\r\nconst paper = require(\"./signs/paper.png\");\r\nconst scissors=require(\"./signs/scissors.png\");\r\n\r\nconst randomRPS=()=>{\r\n  const signs=[rock,paper,scissors];\r\n  const rand=Math.floor(Math.random()*3);\r\n  return signs[rand];\r\n}\r\n\r\n//color array\r\n\r\nconst bgColors=['#1abc9c','#3498db','#9b59b6'];\r\n\r\nconst PlayScreen=()=>{\r\n\r\n  //this is hooks function \r\n  const [counter ,setCounter]=useState(4);\r\n\r\n  \r\n\r\n  //this is hooks effect\r\n  useEffect(()=>{\r\n    if(counter===0) \r\n    return;  \r\n     const timer=setTimeout(() => {\r\n        setCounter(counter-1)\r\n      }, 500);\r\n      return ()=>{\r\n        clearTimeout(timer)     \r\n      }\r\n  },[counter])\r\n\r\n\r\n\r\n    return (\r\n        <View style={StyleSheet.compose(styles.container,{backgroundColor:bgColors[counter-1]})}>\r\n          {counter>0?(\r\n             <Text style={styles.header}>{counter} </Text>\r\n          ) :(       \r\n            <>\r\n                             \r\n               <Image style={styles.img} source={randomRPS()} /> \r\n               <View style={styles.btn}>\r\n               <Button  onPress={()=>setCounter(3)} title=\"Play Again\"/> \r\n               </View>\r\n          </>\r\n          )}\r\n        </View>\r\n      );\r\n    }\r\n\r\n\r\n  \r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    \r\n  },\r\n  \r\n   header:{\r\n       fontSize:250,  \r\n       color:\"white\"     \r\n   },\r\n   img:{\r\n     width:350,\r\n     height:350\r\n   },\r\n   btn:{\r\n     position:\"absolute\",\r\n     bottom:20\r\n   }\r\n});\r\n\r\nexport default PlayScreen\r\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport PlayScreen from './src/PlayScreen';\n\n\n\nexport default function App() {\n  const [play, setPlay] = useState(false);\n\n  return (\n     play ? (<PlayScreen/>):(\n\n    <View style={styles.container}>\n      <Text style={styles.header}>Rock Paper Scissors </Text>\n      <Text style={{fontSize:70}}>✊ ✋ ✌️</Text>\n       <View style={styles.button}>\n         <Button onPress={()=>setPlay(true)} title=\"Play\" > </Button>\n         </View>   \n\n\n           \n\n  \n      <StatusBar style=\"auto\" />\n    </View>\n\n\n     )\n\n   \n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    \n  },\n  \n   header:{\n       fontSize:35,\n       fontWeight:\"bold\",\n       marginBottom:100\n   },\n\n   button:{\n     width:250,\n     marginTop:150,\n   }\n\n\n\n\n\n\n\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}